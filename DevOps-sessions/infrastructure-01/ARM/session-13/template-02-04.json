{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "region": {
            "type": "string",
            "defaultValue": "westeurope"
        },
        "gatewayName": {
            "type": "string"
        },
        "gatewaySubnetName": {
            "type": "string"
        },
        "vnetName": {
            "type": "string"
        },
        "appName": {
            "type": "string",
            "minLength": 2
        },
        "planName": {
            "type": "string",
            "defaultValue": "exampleplan"
        },
        "planTier": {
            "type": "string",
            "minLength": 2,
            "defaultValue": "B1"
        },
        "nodesInWebFarm": {
            "type": "int",
            "defaultValue": 1
        },
        "dockerHubImage": {
            "type": "string",
            "defaultValue": "nginx:alpine",
            "metadata": {
                "description": "The Runtime stack of current web app"
            }
        },
        "vnetAddressSpace": {
            "type": "string"
        },
        "subnets": {
            "type": "array"
        },
        "privateEndpoints": {
            "type": "array"
        },
        "wafRules": {
            "type": "object"
        }
    },
    "variables": {
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('gatewaySubnetName'))]",
        "linuxFxVersion": "[concat('DOCKER|', parameters('dockerHubImage'))]",
        "publicIp": "[concat(parameters('gatewayName'), '-ip')]",
        "gatewayIpConf": "gateway-ipconf-01",
        "frontendIpconfig": "frontend-ipconf-01",
        "frontendPort": "frontend-port-01",
        "backendAddressPool": "backend-address-pool-01",
        "backendHttpSettings": "backend-http-settings-01",
        "httpListener": "http-listener-01",
        "privateDnsZone": "damwar.dns-zone"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-08-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('region')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressSpace')]"
                    ]
                },
                "copy": [
                    {
                        "name": "subnets",
                        "count": "[length(parameters('subnets'))]",
                        "input": "[parameters('subnets')[copyIndex('subnets')]]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "name": "[parameters('planName')]",
            "location": "[parameters('region')]",
            "sku": {
                "name": "[parameters('planTier')]",
                "size": "[parameters('planTier')]",
                "capacity": "[parameters('nodesInWebFarm')]"
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": "false",
                "reserved": "true",
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[parameters('appName')]",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('planName'))]"
            ],
            "kind": "app",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('planName'))]",
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]"
                }
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIp')]",
            "location": "[parameters('region')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2022-01-01",
            "name": "[parameters('gatewayName')]",
            "location": "[parameters('region')]",
            "properties": {
                "webApplicationFirewallConfiguration": "[parameters('wafRules')]",
                "sku": {
                    "capacity": 1,
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "backendAddressPools": [
                    {
                        "name": "[variables('backendAddressPool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "[concat(parameters('appName'), '.', variables('privateDnsZone'))]",
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('backendHttpSettings')]",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "requestTimeout": 30
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {   
                        "name": "[variables('frontendIpconfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIp'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('frontendPort')]",
                        "properties": {
                            "port": 777
                        }
                    }
                ],
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('gatewayIpConf')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('httpListener')]",
                        "properties": {
                            "customErrorConfigurations": [
                                {
                                    "customErrorPageUrl": "https://www.google.com/index.html",
                                    "statusCode": "HttpStatus403"
                                }
                            ],
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('gatewayName'), variables('frontendIpconfig'))]"
                            },
                            "FrontendPort": {
                                "Id": "[resourceId('Microsoft.Network/applicationgateways/frontendPorts', parameters('gatewayName'), variables('frontendPort'))]"
                            },
                            "protocol": "http",
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "routing-rules-01",
                        "properties": {
                            "priority": 300,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationgateways/backendAddressPools', parameters('gatewayName'), variables('backendAddressPool'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationgateways/backendHttpSettingsCollection', parameters('gatewayName'), variables('backendHttpSettings'))]"
                            },
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationgateways/httpListeners', parameters('gatewayName'), variables('httpListener'))]"
                            },
                            "ruleType": "basic",
                        }
                    }
                ],
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-03-01",
            "name": "[parameters('privateEndpoints')[copyindex()].name]",
            "location": "[parameters('region')]",
            "dependsOn": [
                "[parameters('appName')]",
                "[parameters('vnetName')]",
                "[parameters('gatewayName')]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId(parameters('privateEndpoints')[copyindex()].subnet.type, parameters('privateEndpoints')[copyindex()].subnet.vnetName, parameters('privateEndpoints')[copyindex()].subnet.subnetName)]",
                    "applicationGatewayIpConfigurations": [
                        {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/gatewayIpConfigurations', parameters('gatewayName'), variables('gatewayIpConf'))]"
                        }
                    ],
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints')[copyindex()].privateLinkServiceConnections.name]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId(parameters('privateEndpoints')[copyindex()].privateLinkServiceConnections.properties.privateLinkServiceResource.type, parameters('privateEndpoints')[copyindex()].privateLinkServiceConnections.properties.privateLinkServiceResource.name)]",
                            "groupIds": [
                                "sites"
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "privateEndpointLoop",
                "count": "[length(parameters('privateEndpoints'))]"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateDnsZone')]",
            "location": "Global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('privateDnsZone'), '/', variables('privateDnsZone'), '-link')]",
            "location": "Global",
            "properties": {
                "registrationEnabled": "false",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZone'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('privateDnsZone'), '/', parameters('appName'))]",
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "[reference(resourceId('Microsoft.Web/sites', parameters('appName')), '2016-03-01', 'Full').properties.inboundIpAddress]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZone'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ]
        }
    ]
}